os:
  - linux
sudo: false

env:
  - ANDROID_COMPILE_SDK="28"
  - ANDROID_BUILD_TOOLS="28.0.2"
  - ANDROID_SDK_TOOLS="4333796"
  - FLUTTER_VERSION="https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.2.1-stable.tar.xz"

before_script:

  # - git clone https://github.com/flutter/flutter.git -b stable --depth 1
  # - ./flutter/bin/flutter doctor
  # - ./flutter/bin/flutter packages get

  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail
  # flutter sdk setup
  - wget --output-document=flutter-sdk.tar.xz $FLUTTER_VERSION
  - tar -xf flutter-sdk.tar.xz
  - export PATH=$PATH:$PWD/flutter/bin
  - echo flutter.sdk=$PWD/flutter > android/local.properties
  - chmod +x ./android/gradlew

script:
  - flutter analyze --no-current-package --dartdocs $TRAVIS_BUILD_DIR/lib
  # - ./flutter/bin/cache/dart-sdk/bin/dartfmt -n ./lib --set-exit-if-changed
  - flutter test --coverage --coverage-path=lcov.info
after_success:
  - bash <(curl -s https://codecov.io/bash)
cache:
  directories:
    - $HOME/.pub-cache

# image: openjdk:8-jdk

# variables:
#   ANDROID_COMPILE_SDK: "28"
#   ANDROID_BUILD_TOOLS: "28.0.2"
#   ANDROID_SDK_TOOLS:   "4333796"
#   FLUTTER_VERSION: "https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.2.1-stable.tar.xz"

# before_script:
#   - apt-get --quiet update --yes
#   - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
#   - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
#   - unzip -d android-sdk-linux android-sdk.zip
#   - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
#   - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
#   - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
#   - export ANDROID_HOME=$PWD/android-sdk-linux
#   - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
#   # temporarily disable checking for EPIPE error and use yes to accept all licenses
#   - set +o pipefail
#   - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
#   - set -o pipefail
#   # flutter sdk setup
#   - wget --output-document=flutter-sdk.tar.xz $FLUTTER_VERSION
#   - tar -xf flutter-sdk.tar.xz
#   - export PATH=$PATH:$PWD/flutter/bin
#   - echo flutter.sdk=$PWD/flutter > android/local.properties
#   - chmod +x ./android/gradlew

# stages:
#   - test
#   - build

# test:android:
#   stage: test
#   script:
#     - cd android
#     - ./gradlew -Pci --console=plain :app:testDebug

# build:apk:
#   stage: build
#   script:
#     - flutter build apk
#   artifacts:
#     paths:
#       - build/app/outputs/apk

# build:bundle:
#   stage: build
#   script:
#     - flutter build appbundle
#   artifacts:
#     paths:
#       - build/app/outputs/bundle

# test:flutter:
#   stage: test
#   script:
#     - flutter test